{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","nameLabel","type","onChange","formBtn","Component","ContactItem","id","onDeleteContact","contactItem","onClick","ContactList","contacts","contactList","map","contact","Filter","filterLabel","filterTitle","App","filter","addContact","newContact","uuidv4","find","toLowerCase","alert","prev","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","contId","prevState","visibleContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.123296e6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport s from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // const { name, number } = this.state;\n\n    this.props.onSubmit(this.state);\n    // this.props.onSubmit(name, number);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className={s.nameLabel}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n          ></input>\n        </label>\n        <label className={s.nameLabel}>\n          Number\n          <input\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleInputChange}\n          ></input>\n        </label>\n        <button className={s.formBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nexport default function ContactItem({ id, name, number, onDeleteContact }) {\n  // console.log(typeof onDeleteContact);\n  // console.log(id);\n\n  return (\n    <li className={s.contactItem}>\n      <span>{name}</span>\n      <span>{number}</span>\n      <button onClick={() => onDeleteContact(id)}>Delete</button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <>\n      <ul className={s.contactList}>\n        {contacts.map(contact => (\n          <ContactItem\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n            onDeleteContact={onDeleteContact}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={s.filterLabel}>\n      <span className={s.filterTitle}>Find contacts by name</span>\n      <input type=\"text\" value={value} onChange={onChange}></input>\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const newContact = { name, number, id: uuidv4() };\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    this.setState(prev => ({\n      contacts: [...prev.contacts, newContact],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contId),\n    }));\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2Crtj\",\"contactItem\":\"ContactList_contactItem__NEPP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameLabel\":\"ContactForm_nameLabel__1D3rn\",\"formBtn\":\"ContactForm_formBtn__3N8HB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__3b7JT\",\"filterTitle\":\"Filter_filterTitle__2Bd1W\"};"],"sourceRoot":""}